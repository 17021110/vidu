{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/reactnativecli/bunbu/bunbu/src/components/Draggable.js\";\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nexport default class Draggable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isDragging: false,\n      originalX: 0,\n      originalY: 0,\n      translateX: 0,\n      translateY: 0,\n      lastTranslateX: 0,\n      lastTranslateY: 0\n    };\n\n    this.handleMouseDown = ({\n      clientX,\n      clientY\n    }) => {\n      window.addEventListener('mousemove', this.handleMouseMove);\n      window.addEventListener('mouseup', this.handleMouseUp);\n\n      if (this.props.onDragStart) {\n        this.props.onDragStart();\n      }\n\n      this.setState({\n        originalX: clientX,\n        originalY: clientY,\n        isDragging: true\n      });\n    };\n\n    this.handleMouseMove = ({\n      clientX,\n      clientY\n    }) => {\n      const {\n        isDragging\n      } = this.state;\n      const {\n        onDrag\n      } = this.props;\n\n      if (!isDragging) {\n        return;\n      }\n\n      this.setState(prevState => ({\n        translateX: clientX - prevState.originalX + prevState.lastTranslateX,\n        translateY: clientY - prevState.originalY + prevState.lastTranslateY\n      }), () => {\n        if (onDrag) {\n          onDrag({\n            translateX: this.state.translateX,\n            translateY: this.state.translateY\n          });\n        }\n      });\n    };\n\n    this.handleMouseUp = () => {\n      window.removeEventListener('mousemove', this.handleMouseMove);\n      window.removeEventListener('mouseup', this.handleMouseUp);\n      this.setState({\n        originalX: 0,\n        originalY: 0,\n        lastTranslateX: this.state.translateX,\n        lastTranslateY: this.state.translateY,\n        isDragging: false\n      }, () => {\n        if (this.props.onDragEnd) {\n          this.props.onDragEnd();\n        }\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('mousemove', this.handleMouseMove);\n    window.removeEventListener('mouseup', this.handleMouseUp);\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    const {\n      translateX,\n      translateY,\n      isDragging\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      onMouseDown: this.handleMouseDown,\n      x: translateX,\n      y: translateY,\n      isDragging: isDragging,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, children);\n  }\n\n}\nconst Container = styled.div.attrs({\n  style: ({\n    x,\n    y\n  }) => ({\n    transform: `translate(${x}px, ${y}px)`\n  })\n})`\n \n`;","map":{"version":3,"sources":["/Users/mac/Documents/reactnativecli/bunbu/bunbu/src/components/Draggable.js"],"names":["React","styled","css","Draggable","Component","state","isDragging","originalX","originalY","translateX","translateY","lastTranslateX","lastTranslateY","handleMouseDown","clientX","clientY","window","addEventListener","handleMouseMove","handleMouseUp","props","onDragStart","setState","onDrag","prevState","removeEventListener","onDragEnd","componentWillUnmount","render","children","Container","div","attrs","style","x","y","transform"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\n\nexport default class Draggable extends React.Component {\n    state = {\n        isDragging: false,\n\n        originalX: 0,\n        originalY: 0,\n\n        translateX: 0,\n        translateY: 0,\n\n        lastTranslateX: 0,\n        lastTranslateY: 0\n    };\n\n    componentWillUnmount() {\n        window.removeEventListener('mousemove', this.handleMouseMove);\n        window.removeEventListener('mouseup', this.handleMouseUp);\n    }\n\n    handleMouseDown = ({ clientX, clientY }) => {\n        window.addEventListener('mousemove', this.handleMouseMove);\n        window.addEventListener('mouseup', this.handleMouseUp);\n\n        if (this.props.onDragStart) {\n            this.props.onDragStart();\n        }\n\n        this.setState({\n            originalX: clientX,\n            originalY: clientY,\n            isDragging: true\n        });\n    };\n\n    handleMouseMove = ({ clientX, clientY }) => {\n        const { isDragging } = this.state;\n        const { onDrag } = this.props;\n\n        if (!isDragging) {\n            return;\n        }\n\n        this.setState(prevState => ({\n            translateX: clientX - prevState.originalX + prevState.lastTranslateX,\n            translateY: clientY - prevState.originalY + prevState.lastTranslateY\n        }), () => {\n            if (onDrag) {\n                onDrag({\n                    translateX: this.state.translateX,\n                    translateY: this.state.translateY\n                });\n            }\n        });\n    };\n\n    handleMouseUp = () => {\n        window.removeEventListener('mousemove', this.handleMouseMove);\n        window.removeEventListener('mouseup', this.handleMouseUp);\n\n        this.setState(\n            {\n                originalX: 0,\n                originalY: 0,\n                lastTranslateX: this.state.translateX,\n                lastTranslateY: this.state.translateY,\n\n                isDragging: false\n            },\n            () => {\n                if (this.props.onDragEnd) {\n                    this.props.onDragEnd();\n                }\n            }\n        );\n    };\n\n    render() {\n        const { children } = this.props;\n        const { translateX, translateY, isDragging } = this.state;\n\n        return (\n            <Container\n                onMouseDown={this.handleMouseDown}\n                x={translateX}\n                y={translateY}\n                isDragging={isDragging}\n            >\n                {children}\n            </Container>\n        );\n    }\n}\n\nconst Container = styled.div.attrs({\n    style: ({ x, y }) => ({\n        transform: `translate(${x}px, ${y}px)`\n    }),\n})`\n \n`;"]},"metadata":{},"sourceType":"module"}